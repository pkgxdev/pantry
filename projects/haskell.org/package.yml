distributable:
  url: https://downloads.haskell.org/~ghc/{{ version}}/ghc-{{ version}}-src.tar.xz
  strip-components: 1

versions:
  - 9.4.3
  #TODO
  # github: ghc/ghc/tags
  # strip:
  #   - /^ghc-/
  #   - /-release$/
  # however ghc breaks every time they release a new version
  # so you are welcome to embrace trying to build it, we kindly ask they care
  # more about ensuring their monolithic nonsense has stability in builds

#NOTE relocatable if we edit the shell scripts

provides:
  - bin/ghc
  - bin/ghc-pkg
  - bin/ghci
  - bin/haddock
  - bin/hp2ps
  - bin/hpc
  - bin/hsc2hs
  - bin/runghc
  - bin/runhaskell

dependencies:
  gnu.org/gmp: 6
  invisible-island.net/ncurses: 6
  tea.xyz/gx/cc: c99

build:
  dependencies:
    gnu.org/autoconf: ^2
    gnu.org/automake: ^1  # `aclocal` is used during the build for some reason
    tea.xyz/gx/make: '*'  #FIXME specifically, gnu make is *required*
    curl.se: '*'
    gnu.org/m4: '*'
    git-scm.org: ^2
    python.org: ^3
    darwin:
      llvm.org: ^12 || ^13
    linux/aarch64:
      github.com/numactl/numactl: ^2 # ghcup needs this
  script: |-
    # `ghc` needs `ghc` to bootstrap `ghc`
    # The canonical way to achieve this is with `ghcup`
    # To that end, we capture $HOME so as to no pollute the user's life with unwanted
    # stage0 tooling. Instead, everything is localized to $HOME, and can be
    # cleaned up at will, and won't capture any of the user's workflow

    export HOME="$(pwd)"
    export BOOTSTRAP_HASKELL_NONINTERACTIVE=1
    export BOOTSTRAP_HASKELL_ADJUST_BASHRC=0
    export BOOTSTRAP_HASKELL_GHC_VERSION=9.2.5

    if test -d .ghcup; then
      echo "ghcup already installed"
    else
      curl --proto '=https' --tlsv1.2 -sSf https://get-ghcup.haskell.org | sh
    fi

    PATH="$HOME/.ghcup/bin:$PATH"

    if test -e $HOME/.cabal/bin; then
      rm -r $HOME/.cabal/bin
    fi

    cabal update
    cabal install alex happy

    export PATH="$HOME/.cabal/bin:$PATH"
    GHC="$HOME/.ghcup/bin/ghc"

    ./boot.source
    ./configure $ARGS
    hadrian/build -j

    for shim in $shims; do
      sed -i.bak -e 's_="{{prefix}}_="$(dirname $(dirname $0))_' {{prefix}}/bin/$shim-{{version}} && \
        rm {{prefix}}/bin/$shim-{{version}}.bak
    done
  env:
    CC: clang
    LDFLAGS:
      - -Wl,-rpath,{{tea.prefix}}
    ARGS:
      - --prefix={{prefix}}
      - --disable-numa
      - --with-curses-includes={{deps.invisible-island.net/ncurses.prefix}}/include/ncursesw
    darwin:
      ARGS:
      #- --with-intree-gmp
      - --with-system-libffi
      - --with-ffi-includes=$(xcrun --show-sdk-path)/usr/include/ffi
    shims:
      - ghc
      - ghc-pkg
      - ghci
      - haddock
      - hp2ps
      - hpc
      - hsc2h
      - runghc
      - runhaskell

test:
  script: |
    out=$(runghc $FIXTURE)
    test "$out" = "Hello World"
  fixture:
    main = putStrLn "Hello World"
