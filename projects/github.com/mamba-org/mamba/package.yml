# You may notice that this bottle named "mamba-org" refers to conda-forge github repo
# This is intentional and not an error

distributable:
  url: https://github.com/conda-forge/miniforge/archive/refs/tags/{{version}}-4.tar.gz #FIXME UGLY HACK, NEED TO MOVE '-4' TO VARIABLES AS PATCH

versions:
  #FIXME parse versions correctly from https://github.com/conda-forge/miniforge/releases
  - "22.11.1"

build:
#FIXME mamba provides sha256 signatures, should we check against them before building?
# https://github.com/conda-forge/miniforge/releases
  dependencies:
    curl.se: '*'
  script: |
    # download mamba installation script
    curl -Lfo mamba.sh "https://github.com/conda-forge/miniforge/releases/download/{{version}}-4/Mambaforge-{{version}}-4-$PLATFORM.sh" #FIXME UGLY HACK, NEED TO MOVE '-4' TO VARIABLES AS PATCH

    sh mamba.sh $ARGS

    # cleanup
    rm mamba.sh

    # post-install: link bin
    ln -s mamba

    #FIXME post-install, {{prefix}}/bin should ideally be added to path,
    # ^ because that's the point of using mamba: you do a `mamba install pkg_name` 
    # ^ and then you should be able to use `pkg_name` in your shell.
    # ^ at the moment, I'm not sure whether this should be a default behaviour of tea,
    # ^ or whether it should be up to a user to add the correct path to their shell config.
    # export PATH="${{prefix}}/bin:$PATH"

  env:
    # env-dependent vars
    darwin/aarch64: {PLATFORM: MacOSX-arm64}
    darwin/x86-64:  {PLATFORM: MacOSX-x86_64}
    linux/aarch64:  {PLATFORM: Linux-aarch64}
    linux/x86-64:   {PLATFORM: Linux-x86_64}
    # mamba install args 
    ARGS:
      - -b             # skip interactive - accept all licence agreements
      - -p {{prefix}} # prefix - where to install

test: |
  mamba --version
  python -c "print('Hello World!')"


provides:
  - bin/mamba #FIXME is this the correct provides?
  - bin/python #FIXME make sure this python does not conflict with https://tea.xyz/+python.org/