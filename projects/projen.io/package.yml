distributable:
  url: https://github.com/projen/projen/archive/refs/tags/{{version.tag}}.tar.gz
  strip-components: 1

versions:
  github: projen/projen

dependencies:
  nodejs.org: ^22 || ^20 || ^18

companions:
  git-scm.org: ">=2.28"
  classic.yarnpkg.com: ^1
  maven.apache.org: ">=3.0.0"
  python.org: ~3.11
  go.dev: ">=1.21"
  
build:
  dependencies:
    classic.yarnpkg.com: ^1
    maven.apache.org: ">=3.0.0"
    python.org: ~3.11
    go.dev: ">=1.21"
  script:
    - mkdir -p "{{prefix}}"/bin
    - yarn version --new-version {{version.raw}} --no-git-tag-version
    - yarn install --check-files --frozen-lockfile
    - yarn package-all
    - tar xfz dist/js/*.tgz -C {{prefix}}
    - cp -R node_modules/constructs "{{prefix}}"/package/node_modules # peer dependency
    - run: ln -s ../package/bin/projen projen
      working-directory: ${{prefix}}/bin

provides:
  - bin/projen

test:
  - test "$(projen --version)" = {{version.raw}}
  - git config --global user.email "ci@pkgx.sh"
  - git config --global user.name "Pkgx CI"
  - run:
      - projen new node --name test-project-node
      - testfiles="package.json yarn.lock .projenrc.js"
      - for file in $testfiles; do test -f $file; done
    working-directory: node
  - run:
      - projen new typescript --name test-project-typescript
      - testfiles="package.json yarn.lock .projenrc.ts"
      - for file in $testfiles; do test -f $file; done
    working-directory: typescript
  - run:
      - projen new java --name test-project-java
      - testfiles="pom.xml"
      - for file in $testfiles; do test -f $file; done
    working-directory: java
  - run:
      - projen new python --name test-project-python
      - testfiles="requirements.txt .projenrc.py"
      - for file in $testfiles; do test -f $file; done
    working-directory: python
