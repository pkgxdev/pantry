distributable:
  #FIXME: pandoc and pandoc-cli have been split :/
  # url: https://hackage.haskell.org/package/pandoc-cli{{ version }}/pandoc-cli-{{ version }}.tar.gz
  url: https://github.com/jgm/pandoc/archive/refs/tags/{{ version }}.tar.gz
  strip-components: 1

#FIXME pandoc has 4 digit versions : /
# so we miss a whole bunch
versions:
  github: jgm/pandoc
  strip: /^pandoc /

provides:
  - bin/pandoc

dependencies:
  gnu.org/gmp: 6
  zlib.net: 1
  sourceware.org/libffi: 3

build:
  dependencies:
    # https://github.com/jgm/pandoc/blob/54b9eeb6a72f1c6f0ae3675cb9e7c29fa3183316/pandoc-cli/pandoc-cli.cabal#L14C18-L15C44
    haskell.org: '>=8.6.5<9.6'
    haskell.org/cabal: ^3
    crates.io/semverator: ^0
  working-directory: pandoc-cli
  script:
    # FIXME: these are seriously hacky; we need to understand how to tweak ghc's `settings`
    # file better
    # it really wants ld.bfd or ld.gold, but those both bring in a host of compiler matching
    # issues, so we'll just do a trick
    - run: |
        mkdir .fakebin
        cat $PROP > .fakebin/ld.bfd
        cat $PROP > .fakebin/ld.gold
        chmod +x .fakebin/*
        export PATH=$PWD/.fakebin:$PATH
      prop: |
        #!/bin/sh
        ld.lld "$@"
      if: linux
    # testing a fix
    - run: cat $PROP > settings
      prop: |
        [("GCC extra via C opts", "")
        ,("C compiler command", "clang")
        ,("C compiler flags", "--target=x86_64-unknown-linux -fPIC")
        ,("C++ compiler command", "clang++")
        ,("C++ compiler flags", "--target=x86_64-unknown-linux -fPIC")
        ,("C compiler link flags", "-pie")
        ,("C compiler supports -no-pie", "NO")
        ,("Haskell CPP command", "clang")
        ,("Haskell CPP flags", "-E -undef -traditional -Wno-invalid-pp-token -Wno-unicode -Wno-trigraphs")
        ,("ld command", "ld.lld")
        ,("ld flags", "-pie")
        ,("ld supports compact unwind", "NO")
        ,("ld supports build-id", "YES")
        ,("ld supports filelist", "NO")
        ,("ld is GNU ld", "YES")
        ,("Merge objects command", "ld.lld")
        ,("Merge objects flags", "-r")
        ,("ar command", "llvm-ar")
        ,("ar flags", "qcls")
        ,("ar supports at file", "YES")
        ,("ar supports -L", "YES")
        ,("ranlib command", "llvm-ranlib")
        ,("otool command", "llvm-otool")
        ,("install_name_tool command", "install_name_tool")
        ,("touch command", "touch")
        ,("dllwrap command", "/bin/false")
        ,("windres command", "/bin/false")
        ,("libtool command", "libtool")
        ,("unlit command", "$topdir/bin/unlit")
        ,("cross compiling", "NO")
        ,("target platform string", "x86_64-unknown-linux")
        ,("target os", "OSLinux")
        ,("target arch", "ArchX86_64")
        ,("target word size", "8")
        ,("target word big endian", "NO")
        ,("target has GNU nonexec stack", "YES")
        ,("target has .ident directive", "YES")
        ,("target has subsections via symbols", "NO")
        ,("target has RTS linker", "YES")
        ,("target has libm", "YES")
        ,("Unregisterised", "NO")
        ,("LLVM target", "x86_64-unknown-linux")
        ,("LLVM llc command", "llc")
        ,("LLVM opt command", "opt")
        ,("LLVM clang command", "clang")
        ,("Use inplace MinGW toolchain", "NO")
        ,("Use interpreter", "YES")
        ,("Support SMP", "YES")
        ,("RTS ways", "debug thr thr_debug thr_p dyn debug_dyn thr_dyn thr_debug_dyn thr_debug_p debug_p")
        ,("Tables next to code", "YES")
        ,("Leading underscore", "NO")
        ,("Use LibFFI", "NO")
        ,("RTS expects libdw", "NO")
        ]
      working-directory: ${{deps.haskell.org.prefix}}/ghc/{{deps.haskell.org.version}}/lib/ghc-{{deps.haskell.org.version}}/lib
      if: linux/x86-64

    # pandoc 2.x - no pandoc-cli subdirectory
    - run: cd ..
      if: <3

    - cabal update
    - mkdir -p {{prefix}}/bin
    # digest versions above 0.0.1.4 have RPATH issues for us.
    - run: |
        sed -i.bak -e's/text$/text, digest <0.0.1.4/' pandoc-cli.cabal
        rm pandoc-cli.cabal.bak
    - cabal v2-install $ARGS
  env:
    ARGS:
      - --install-method=copy
      - --installdir={{prefix}}/bin
      - --jobs={{hw.concurrency}}
      # https://pandoc.org/installing.html#creating-a-relocatable-binary
      - -fembed_data_files
    linux:
      ARGS:
        # else segfaults
        - --enable-relocatable
        - --ghc-option=-fPIC
        - --ghc-option=-optl=-pie

test:
  fixture: |
    # tea
    brew2 for you
  script: pandoc -f markdown -t html5 $FIXTURE
  #TODO check output is HTML!
