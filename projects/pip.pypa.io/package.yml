distributable:
  url: https://github.com/pypa/pip/archive/refs/tags/{{version.raw}}.tar.gz
  strip-components: 1

versions:
  github: pypa/pip/tags
  # FIXME: the major prior to 18 is 10, which is ancient and doesn't currently work
  ignore: ['<18']

dependencies:
  pkgx.sh: ^1

build:
  dependencies:
    python.org: ^3.7
    crates.io/semverator: ^0.4.3
  script:
  - pkgx curl -O https://bootstrap.pypa.io/get-pip.py

  - test -d bootstrap || mkdir bootstrap

  - python get-pip.py --target="$(pwd)/bootstrap"

  - PYTHONPATH=$(pwd)/bootstrap python -m pip install . --target={{prefix}}/lib

  # provide pip3.7 â€” pip3.12 (or whatever is latest)
  # they will automatically use the correct python versions
  - run: |
      v=3.6
      while semverator lt $v {{deps.python.org.version.marketing}}; do
        v=$(semverator bump $v minor | cut -d. -f1,2)
        cp $PROP pip$v
        echo "exec pkgx python@$v \$d/lib/bin/pip \"\$@\"" >> pip$v
      done

      cp $PROP pip{{ deps.python.org.version.major }}
      echo 'exec pkgx python@{{ deps.python.org.version.major }} $d/lib/bin/pip "$@"' >> pip{{ deps.python.org.version.major }}

      cp $PROP pip
      echo 'exec pkgx python $d/lib/bin/pip "$@"' >> pip

      rm {{prefix}}/lib/bin/pip?*
    working-directory:
      ${{prefix}}/bin
    prop: |
      #!/bin/sh
      d="$(cd "$(dirname "$0")"/.. && pwd)"
      export PIP_DISABLE_PIP_VERSION_CHECK=1
      export PYTHONPATH="$d:$PYTHONPATH"

  - fix-shebangs.ts {{prefix}}/lib/bin/*

test:
  - run: pkgx +python.org~3.9 pip install findtui --target .
    if: ~18
  - run:
      - pip install findtui --target foo
      - pip3.10 install findtui --target .
    if: '>=19'

  - test -f findtui/main.py

provides:
  - bin/pip
#FIXME  - bin/pip{{deps.python.org.version.major}}
