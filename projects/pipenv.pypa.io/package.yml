distributable:
  url: https://github.com/pypa/pipenv/archive/refs/tags/{{ version.tag }}.tar.gz
  strip-components: 1

versions:
  github: pypa/pipenv

companions:
  pip.pypa.io: '*'

dependencies:
  pkgx.sh: ^1

build:
  dependencies:
    python.org: ~3.11 # approx. 3 older versions wonâ€™t work with python 3.12
    crates.io/semverator: '*'
  script:
    - bkpyvenv stage {{prefix}} {{version}}
    - ${{prefix}}/venv/bin/pip install .
    - bkpyvenv seal {{prefix}} pipenv
    # bring in libpython for linux
    - run: cp -a {{deps.python.org.prefix}}/lib/libpython* .
      if: linux
      working-directory: ${{prefix}}/lib

    # create exec scripts for pipenv so it can auto install and use the pythons it wants
    - working-directory: ${{prefix}}/bin
      run:
        - v=3.6
        - vMax=3.13 #FIXME determine dynamically or even script this in the shim
        - |
          while semverator lt $v $vMax; do
            v=$(semverator bump $v minor | cut -d. -f1,2)
            echo '#!/bin/sh' > python$v
            echo "exec pkgx python~$v \"\$@\"" >> python$v
            chmod +x python$v
          done

runtime:
  env:
    PIPENV_IGNORE_VIRTUALENVS: 1

test:
  - pipenv --version
  - pipenv --version 2>&1 | grep {{version}}

  # changed to python3.9; 3.7/8 generate a lockfile resolver error
  - run:
      - source <(pkgx +python@3.9)
      # fixes loading libpython on linux
      - echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH" > .env
      - pipenv --python 3.9
      - pipenv --verbose install pycowsay
      - pipenv run pycowsay "Hello World"
    working-directory: a

  - run:
      - source <(pkgx +python@3.10)
      # fixes loading libpython on linux
      - echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH" > .env
      - pipenv --python 3.10
      - pipenv install pycowsay
      - pipenv run pycowsay "Hello World"
    working-directory: b

provides:
  - bin/pipenv

marker-files:
  - Pipfile
  - Pipfile.lock
  # TODO python version can be obtained from the Pipfile
