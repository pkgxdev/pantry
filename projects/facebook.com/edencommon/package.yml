distributable:
  url: https://github.com/facebookexperimental/edencommon/archive/v{{version.raw}}.tar.gz
  strip-components: 1

versions:
  github: facebookexperimental/edencommon/tags

dependencies:
  facebook.com/folly: '*'
  gflags.github.io: '*'
  google.com/glog: '*'
  facebook.com/fb303: '*' # since 2024.03.18.00
  facebook.com/mvfst: '*' # since 2024.03.18.00
  openssl.org: ^1.1
  sourceware.org/bzip2: ^1
  boost.org: ~1.88
  linux:
    gnu.org/gcc/libstdcxx: 13

build:
  dependencies:
    cmake.org: '*'
    google.com/googletest: '*'
    linux:
      gnu.org/gcc: 13
  script:
    # omit building py library
    - sed -i 's/COMPONENTS cpp2 py)/COMPONENTS cpp2)/' CMakeLists.txt
    # fix timeouts
    - run: sed -i 's/add_subdirectory(test)/#add_subdirectory(test)/' {os,utils}/CMakeLists.txt
      working-directory: eden/common
    # -shared and -pie don't mix
    - run:
        - cp $PROP g++-wrapper
        - chmod +x g++-wrapper
      prop: |
        #!/bin/bash
        # Capture all arguments into an array
        ARGS=("$@")

        # Check if the '-shared' flag is present in the arguments
        if printf "%s\n" "${ARGS[@]}" | grep -q -e '-shared'; then

          # Use a loop to filter out the '-pie' flag from the arguments
          FILTERED_ARGS=()
          for arg in "${ARGS[@]}"; do
            if [ "$arg" != "-pie" ]; then
              FILTERED_ARGS+=("$arg")
            fi
          done

          # Pass the filtered arguments to g++
          exec g++ "${FILTERED_ARGS[@]}"
        else
          # Pass the original arguments to g++
          exec g++ "${ARGS[@]}"
        fi
      working-directory: $HOME/.local/bin
      if: linux
    - cmake -S . -B _build $ARGS
    - cmake --build _build
    - cmake --install _build
  env:
    ARGS:
      - -DBUILD_SHARED_LIBS=ON
      - -DCMAKE_INSTALL_PREFIX={{prefix}}
      - -DCMAKE_INSTALL_LIBDIR=lib
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_VERBOSE_MAKEFILE=ON
      - -Wno-dev
      - -DBUILD_TESTING=OFF
      - -DCMAKE_CXX_STANDARD=20
      - -DCMAKE_CXX_STANDARD_REQUIRED=ON
    linux:
      CXX: g++-wrapper
      PATH: $HOME/.local/bin:$PATH
      ARGS:
        - -DCMAKE_C_FLAGS=-fPIC
        - -DCMAKE_CXX_FLAGS=-fPIC
        - -DCMAKE_EXE_LINKER_FLAGS=-Wl,-pie

test:
  dependencies:
    linux:
      gnu.org/gcc: 13
  script:
    - c++ -std=c++20 test.cc -o test -ledencommon_utils -lfolly -lglog -lfmt $EXTRA
    - ./test 1
  env:
    linux:
      EXTRA: -lc++abi
